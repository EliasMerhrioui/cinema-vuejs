{"ast":null,"code":"/* eslint-disable no-console */\n\n/* eslint-disable no-unused-vars */\nexport default {\n  /* \r\n      [STORE] State => https://bit.ly/3ua8avj\r\n      Define store private states\r\n  */\n  state: {\n    fetchresponse: undefined\n  },\n  //\n\n  /* \r\n      [STORE] Getters => https://bit.ly/3ua8avj\r\n      Define methods to export state value\r\n  */\n  getters: {\n    fetchresponse: state => state.fetchresponse\n  },\n  //\n\n  /* \r\n      [STORE] Muttation => https://bit.ly/3ua8avj\r\n      Define setters to update state value\r\n  */\n  mutations: {\n    fetchresponse(state, payload) {\n      state.fetchresponse = payload.data;\n    }\n\n  },\n  //\n\n  /* \r\n      [STORE] Actions => https://bit.ly/3ua8avj\r\n      Define dispatchers to call state mutations\r\n  */\n  actions: {\n    getOperator({\n      dispatch,\n      commit,\n      state\n    }, data) {\n      fetch(`http://localhost:9449/${data.query}`, {\n        method: 'GET'\n      }).then(apiResponse => {\n        if (apiResponse.ok) {\n          return apiResponse.json();\n        } else {\n          throw apiResponse;\n        }\n      }).then(jsonResponse => {\n        // Check jsonResponse\n        if (jsonResponse[0]) {\n          // Update 'fetchresponse' state\n          commit('fetchresponse', {\n            data: {\n              ok: true,\n              from: 'getOperator',\n              data: jsonResponse[0]\n            }\n          }); // Dispatch 'ui' module action\n\n          dispatch('setUiSate', {\n            mutation: 'userinfos',\n            value: jsonResponse[0]\n          }); // Save user infos in LocalStorage\n\n          window.localStorage.setItem('userinfos', JSON.stringify(jsonResponse[0]));\n        }\n      }).catch(apiError => {\n        console.log('apiError', apiError);\n      });\n    }\n\n  } //\n\n};","map":{"version":3,"sources":["C:/Users/emerhrioui/OneDrive - MGEN/Documents/GitHub/cinema-vuejs/src/store/modules/crud.js"],"names":["state","fetchresponse","undefined","getters","mutations","payload","data","actions","getOperator","dispatch","commit","fetch","query","method","then","apiResponse","ok","json","jsonResponse","from","mutation","value","window","localStorage","setItem","JSON","stringify","catch","apiError","console","log"],"mappings":"AAAA;;AACA;AAEA,eAAc;AACV;AACJ;AACA;AACA;AACQA,EAAAA,KAAK,EAAE;AACHC,IAAAA,aAAa,EAAEC;AADZ,GALD;AAQV;;AAEA;AACJ;AACA;AACA;AACQC,EAAAA,OAAO,EAAE;AACLF,IAAAA,aAAa,EAAGD,KAAD,IAAWA,KAAK,CAACC;AAD3B,GAdH;AAiBV;;AAEA;AACJ;AACA;AACA;AACQG,EAAAA,SAAS,EAAE;AACPH,IAAAA,aAAa,CAAED,KAAF,EAASK,OAAT,EAAkB;AAAEL,MAAAA,KAAK,CAACC,aAAN,GAAsBI,OAAO,CAACC,IAA9B;AAAoC;;AAD9D,GAvBL;AA0BV;;AAEA;AACJ;AACA;AACA;AACQC,EAAAA,OAAO,EAAE;AACLC,IAAAA,WAAW,CAAE;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,MAAZ;AAAoBV,MAAAA;AAApB,KAAF,EAA+BM,IAA/B,EAAqC;AAC5CK,MAAAA,KAAK,CAAG,yBAAwBL,IAAI,CAACM,KAAM,EAAtC,EAAyC;AAC1CC,QAAAA,MAAM,EAAE;AADkC,OAAzC,CAAL,CAGCC,IAHD,CAGOC,WAAW,IAAI;AAClB,YAAIA,WAAW,CAACC,EAAhB,EAAoB;AAAE,iBAAOD,WAAW,CAACE,IAAZ,EAAP;AAA2B,SAAjD,MACI;AAAE,gBAAMF,WAAN;AAAmB;AAC5B,OAND,EAOCD,IAPD,CAOOI,YAAY,IAAI;AACnB;AACA,YAAIA,YAAY,CAAC,CAAD,CAAhB,EAAqB;AACjB;AACAR,UAAAA,MAAM,CAAE,eAAF,EAAmB;AAAEJ,YAAAA,IAAI,EAAE;AAC7BU,cAAAA,EAAE,EAAE,IADyB;AAE7BG,cAAAA,IAAI,EAAE,aAFuB;AAG7Bb,cAAAA,IAAI,EAAEY,YAAY,CAAC,CAAD;AAHW;AAAR,WAAnB,CAAN,CAFiB,CAQjB;;AACAT,UAAAA,QAAQ,CAAC,WAAD,EAAc;AAClBW,YAAAA,QAAQ,EAAE,WADQ;AAElBC,YAAAA,KAAK,EAAEH,YAAY,CAAC,CAAD;AAFD,WAAd,CAAR,CATiB,CAcjB;;AACAI,UAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,EAAyCC,IAAI,CAACC,SAAL,CAAeR,YAAY,CAAC,CAAD,CAA3B,CAAzC;AACH;AACJ,OA1BD,EA2BCS,KA3BD,CA2BQC,QAAQ,IAAI;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AACH,OA7BD;AA8BH;;AAhCI,GAhCH,CAkEV;;AAlEU,CAAd","sourcesContent":["/* eslint-disable no-console */\r\n/* eslint-disable no-unused-vars */\r\n\r\nexport default{\r\n    /* \r\n        [STORE] State => https://bit.ly/3ua8avj\r\n        Define store private states\r\n    */\r\n        state: {\r\n            fetchresponse: undefined,\r\n        },\r\n    //\r\n\r\n    /* \r\n        [STORE] Getters => https://bit.ly/3ua8avj\r\n        Define methods to export state value\r\n    */\r\n        getters: {\r\n            fetchresponse: (state) => state.fetchresponse,\r\n        },\r\n    //\r\n\r\n    /* \r\n        [STORE] Muttation => https://bit.ly/3ua8avj\r\n        Define setters to update state value\r\n    */\r\n        mutations: {\r\n            fetchresponse( state, payload ){ state.fetchresponse = payload.data },\r\n        },\r\n    //\r\n\r\n    /* \r\n        [STORE] Actions => https://bit.ly/3ua8avj\r\n        Define dispatchers to call state mutations\r\n    */\r\n        actions: {\r\n            getOperator( { dispatch, commit, state }, data ){\r\n                fetch( `http://localhost:9449/${data.query}`, {\r\n                    method: 'GET'\r\n                })\r\n                .then( apiResponse => {\r\n                    if( apiResponse.ok ){ return apiResponse.json() }\r\n                    else{ throw apiResponse } \r\n                })\r\n                .then( jsonResponse => {\r\n                    // Check jsonResponse\r\n                    if( jsonResponse[0] ){\r\n                        // Update 'fetchresponse' state\r\n                        commit( 'fetchresponse', { data: {\r\n                            ok: true,\r\n                            from: 'getOperator',\r\n                            data: jsonResponse[0]\r\n                        }})\r\n\r\n                        // Dispatch 'ui' module action\r\n                        dispatch('setUiSate', { \r\n                            mutation: 'userinfos',\r\n                            value: jsonResponse[0],\r\n                        });\r\n\r\n                        // Save user infos in LocalStorage\r\n                        window.localStorage.setItem('userinfos', JSON.stringify(jsonResponse[0]) );\r\n                    }\r\n                })\r\n                .catch( apiError => {\r\n                    console.log('apiError', apiError)\r\n                });\r\n            }\r\n        }\r\n    //\r\n}"]},"metadata":{},"sourceType":"module"}