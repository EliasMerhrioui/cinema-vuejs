{"ast":null,"code":"/* eslint-disable no-console */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable no-mixed-spaces-and-tabs */\n\n/* \r\n\t[VUE] Main imports\r\n\tDefine main imports to create the application\r\n*/\nimport ButtonBase from \"./ButtonBase.vue\"; //\n\n/*\r\n\t[VUE] Component\r\n\tDefine properties and methods => https://bit.ly/3GdqmXg\r\n*/\n\nexport default {\n  // [VUE] Component name\n  name: 'FormBase',\n\n  /*\r\n  \t[VUE] Components => https://bit.ly/3GdqmXg\r\n  \tUsed to inject children components\r\n  */\n  components: {\n    ButtonBase\n  },\n  //\n\n  /* \r\n  \t[VUE] Props => https://fr.vuejs.org/v2/guide/components-props.html\r\n  \tData binding CTRL => VIEW\r\n  */\n  props: {\n    formValue: {\n      type: Object,\n      required: true,\n      default: () => {}\n    }\n  },\n  //\n\n  /*\r\n  \t[VUE] Computed => https://vuejs.org/guide/essentials/computed.html\r\n  \tUsed to define simple in-template expression, \r\n  \tthe expression below bind values from Store getters\r\n  */\n  computed: {\n    cmpFormValue: function () {\n      return this.formValue;\n    }\n  },\n\n  //\n\n  /*\r\n  \t[VUE] Data => https://bit.ly/3GdqmXg\r\n  \tUsed to inject data in the Vue.js component\r\n  */\n  data() {\n    return {\n      cmpLoginButton: {\n        type: 'submit',\n        content: 'Login'\n      }\n    };\n  },\n\n  //\n\n  /*\r\n  \t[VUE] Methods => https://bit.ly/3GdqmXg\r\n  \tUsed to add methods in Vue.js component\r\n  */\n  methods: {\n    onClickButton: function (event) {\n      // Prepare forme validation values\n      let isValide = true;\n      let validFomValue = {}; // Get each item form\n\n      for (let prop in this.cmpFormValue) {\n        if (this.cmpFormValue[prop].required) {\n          if (['email', 'password', 'text', 'textarea'].indexOf(this.cmpFormValue[prop].type) !== -1) {\n            if (!this.cmpFormValue[prop].value) {\n              isValide = false;\n            } else {\n              if (this.cmpFormValue[prop].min) {\n                if (this.cmpFormValue[prop].value.length < this.cmpFormValue[prop].min) {\n                  isValide = false;\n                }\n              } else {\n                if (!this.cmpFormValue[prop].value.length) {\n                  isValide = false;\n                }\n              }\n            }\n          }\n        } // Add value in the valid form value\n\n\n        validFomValue[prop] = this.cmpFormValue[prop].value;\n      } // Check form validation\n\n\n      if (isValide) {\n        // Emit event to parent component\n        this.$emit('onSubmit', {\n          from: 'FormBase',\n          value: validFomValue\n        });\n      }\n    }\n  },\n  //\n\n  /*\r\n  \t[VUE] Hooks => https://vuejs.org/api/options-lifecycle.html\r\n  \tCalled after the instance has finished processing all state-related options.\r\n  */\n  created: function () {},\n  //\n\n  /*\r\n  \t[VUE] Hooks => https://vuejs.org/api/options-lifecycle.html\r\n  \tCalled after the component has been mounted.\r\n  */\n  mounted: function () {} //\n\n}; //","map":{"version":3,"mappings":"AAwCC;;AACA;;AACA;;AAEA;;;;AAII,OAAOA,UAAP,MAAuB,kBAAvB,C,CACJ;;AAEA;;;;;AAIC,eAAe;AACd;AACAC,MAAI,EAAE,UAFQ;;AAId;;;;AAICC,YAAU,EAAE;AAAEF;AAAF,GARC;AASd;;AAEA;;;;AAICG,OAAK,EAAE;AACNC,aAAS,EAAE;AACVC,UAAI,EAAEC,MADI;AAEVC,cAAQ,EAAE,IAFA;AAGVC,aAAO,EAAE,MAAM,CAAC;AAHN;AADL,GAfM;AAsBd;;AAEA;;;;;AAKCC,UAAQ,EAAE;AACTC,gBAAY,EAAE,YAAU;AACvB,aAAO,KAAKN,SAAZ;AACD;AAHS,GA7BG;;AAkCd;;AAEA;;;;AAICO,MAAI,GAAE;AACL,WAAO;AACNC,oBAAc,EAAE;AACfP,YAAI,EAAE,QADS;AAEfQ,eAAO,EAAE;AAFM;AADV,KAAP;AAMA,GA/CY;;AAgDd;;AAEA;;;;AAIaC,SAAO,EAAE;AACpBC,iBAAa,EAAE,UAASC,KAAT,EAAe;AAC7B;AACA,UAAIC,QAAO,GAAI,IAAf;AACA,UAAIC,aAAY,GAAI,EAApB,CAH6B,CAK7B;;AACA,WAAK,IAAIC,IAAT,IAAiB,KAAKT,YAAtB,EAAoC;AACnC,YAAI,KAAKA,YAAL,CAAkBS,IAAlB,EAAwBZ,QAA5B,EAAsC;AACrC,cAAI,CAAC,OAAD,EAAU,UAAV,EAAsB,MAAtB,EAA8B,UAA9B,EAA0Ca,OAA1C,CAAmD,KAAKV,YAAL,CAAkBS,IAAlB,EAAwBd,IAA3E,MAAsF,CAAC,CAA3F,EAA8F;AAC7F,gBAAG,CAAC,KAAKK,YAAL,CAAkBS,IAAlB,EAAwBE,KAA5B,EAAkC;AAAEJ,sBAAO,GAAI,KAAX;AAAiB,aAArD,MACI;AACH,kBAAI,KAAKP,YAAL,CAAkBS,IAAlB,EAAwBG,GAA5B,EAAiC;AAChC,oBAAG,KAAKZ,YAAL,CAAkBS,IAAlB,EAAwBE,KAAxB,CAA8BE,MAA9B,GAAuC,KAAKb,YAAL,CAAkBS,IAAlB,EAAwBG,GAAlE,EAAsE;AAAEL,0BAAO,GAAI,KAAX;AAAiB;AAC1F,eAFA,MAGI;AACH,oBAAI,CAAC,KAAKP,YAAL,CAAkBS,IAAlB,EAAwBE,KAAxB,CAA8BE,MAAnC,EAA2C;AAAEN,0BAAO,GAAI,KAAX;AAAiB;AAC/D;AACD;AACD;AACD,SAbmC,CAenC;;;AACAC,qBAAa,CAACC,IAAD,CAAb,GAAsB,KAAKT,YAAL,CAAkBS,IAAlB,EAAwBE,KAA9C;AACD,OAvB6B,CAyB7B;;;AACA,UAAIJ,QAAJ,EAAc;AACb;AACA,aAAKO,KAAL,CAAW,UAAX,EAAuB;AACtBC,cAAI,EAAE,UADgB;AAEtBJ,eAAK,EAAEH;AAFe,SAAvB;AAID;AACA;AAlCmB,GAtDR;AA0FL;;AAET;;;;AAICQ,SAAO,EAAE,YAAU,CAAE,CAhGR;AAiGd;;AAEA;;;;AAICC,SAAO,EAAE,YAAU,CAAE,CAvGR,CAwGd;;AAxGc,CAAf,C,CA0GD","names":["ButtonBase","name","components","props","formValue","type","Object","required","default","computed","cmpFormValue","data","cmpLoginButton","content","methods","onClickButton","event","isValide","validFomValue","prop","indexOf","value","min","length","$emit","from","created","mounted"],"sourceRoot":"","sources":["C:\\Users\\emerhrioui\\OneDrive - MGEN\\Documents\\GitHub\\cinema-vuejs\\src\\components\\base\\FormBase.vue"],"sourcesContent":["<template>\r\n\t<div \r\n\t\tclass=\"form-base-component\"\r\n\t>\r\n\t\t<form @submit=\"$event => $event.preventDefault()\">\r\n\t\t\t<!-- Loop on an object -->\r\n\t\t\t<ul>\r\n\t\t\t\t<li \r\n\t\t\t\t\tv-for=\"( prop, idx ) in cmpFormValue\" \r\n\t\t\t\t\t:key=\"`item-${idx}`\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<label \r\n\t\t\t\t\t\t:for=\"prop.name\"\r\n\t\t\t\t\t\tv-text=\"prop.label\"\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\t:type=\"prop.type\"\r\n\t\t\t\t\t\t:placeholder=\"prop.placeholder\"\r\n\t\t\t\t\t\t:min=\"prop.min ? prop.min : undefined\"\r\n\t\t\t\t\t\t:required=\"prop.required ? prop.required : undefined\"\r\n\t\t\t\t\t\tv-model=\"prop.value\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<!-- Define ButtonBase props strategy -->\r\n\t\t\t<ButtonBase \r\n\t\t\t\tv-if=\"cmpLoginButton\"\r\n\t\t\t\t:buttonvalue=\"cmpLoginButton\"\r\n\t\t\t\t:buttondisabled=\"false\"\r\n\r\n\t\t\t\t@onClickButton=\"onClickButton($event)\"\r\n\t\t\t/>\r\n\t\t</form>\r\n\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\t/* eslint-disable no-console */\r\n\t/* eslint-disable no-unused-vars */\r\n\t/* eslint-disable no-mixed-spaces-and-tabs */\r\n\r\n\t/* \r\n\t\t[VUE] Main imports\r\n\t\tDefine main imports to create the application\r\n\t*/\r\n    \timport ButtonBase from \"./ButtonBase.vue\";\r\n\t//\r\n\r\n\t/*\r\n\t\t[VUE] Component\r\n\t\tDefine properties and methods => https://bit.ly/3GdqmXg\r\n\t*/\r\n\t\texport default {\r\n\t\t\t// [VUE] Component name\r\n\t\t\tname: 'FormBase',\r\n\r\n\t\t\t/*\r\n\t\t\t\t[VUE] Components => https://bit.ly/3GdqmXg\r\n\t\t\t\tUsed to inject children components\r\n\t\t\t*/\r\n\t\t\t\tcomponents: { ButtonBase },\r\n\t\t\t//\r\n\r\n\t\t\t/* \r\n\t\t\t\t[VUE] Props => https://fr.vuejs.org/v2/guide/components-props.html\r\n\t\t\t\tData binding CTRL => VIEW\r\n\t\t\t*/\r\n\t\t\t\tprops: {\r\n\t\t\t\t\tformValue: {\r\n\t\t\t\t\t\ttype: Object,\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tdefault: () => {}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t//\r\n\r\n\t\t\t/*\r\n\t\t\t\t[VUE] Computed => https://vuejs.org/guide/essentials/computed.html\r\n\t\t\t\tUsed to define simple in-template expression, \r\n\t\t\t\tthe expression below bind values from Store getters\r\n\t\t\t*/\r\n\t\t\t\tcomputed: {\r\n\t\t\t\t\tcmpFormValue: function(){\r\n\t\t\t\t\t\treturn this.formValue\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t//\r\n\r\n\t\t\t/*\r\n\t\t\t\t[VUE] Data => https://bit.ly/3GdqmXg\r\n\t\t\t\tUsed to inject data in the Vue.js component\r\n\t\t\t*/\r\n\t\t\t\tdata(){\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tcmpLoginButton: {\r\n\t\t\t\t\t\t\ttype: 'submit',\r\n\t\t\t\t\t\t\tcontent: 'Login',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t//\r\n\r\n\t\t\t/*\r\n\t\t\t\t[VUE] Methods => https://bit.ly/3GdqmXg\r\n\t\t\t\tUsed to add methods in Vue.js component\r\n\t\t\t*/\r\n                methods: {\r\n\t\t\t\t\tonClickButton: function(event){\r\n\t\t\t\t\t\t// Prepare forme validation values\r\n\t\t\t\t\t\tlet isValide = true;\r\n\t\t\t\t\t\tlet validFomValue = {};\r\n\r\n\t\t\t\t\t\t// Get each item form\r\n\t\t\t\t\t\tfor( let prop in this.cmpFormValue ){\r\n\t\t\t\t\t\t\tif( this.cmpFormValue[prop].required ){\r\n\t\t\t\t\t\t\t\tif( ['email', 'password', 'text', 'textarea'].indexOf( this.cmpFormValue[prop].type ) !== -1 ){\r\n\t\t\t\t\t\t\t\t\tif(!this.cmpFormValue[prop].value){ isValide = false } \r\n\t\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\t\tif( this.cmpFormValue[prop].min ){\r\n\t\t\t\t\t\t\t\t\t\t\tif(this.cmpFormValue[prop].value.length < this.cmpFormValue[prop].min){ isValide = false }\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\t\t\tif( !this.cmpFormValue[prop].value.length ){ isValide = false }\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add value in the valid form value\r\n\t\t\t\t\t\t\tvalidFomValue[prop] = this.cmpFormValue[prop].value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Check form validation\r\n\t\t\t\t\t\tif( isValide ){\r\n\t\t\t\t\t\t\t// Emit event to parent component\r\n\t\t\t\t\t\t\tthis.$emit('onSubmit', { \r\n\t\t\t\t\t\t\t\tfrom: 'FormBase',\r\n\t\t\t\t\t\t\t\tvalue: validFomValue,\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n            //\r\n\r\n\t\t\t/*\r\n\t\t\t\t[VUE] Hooks => https://vuejs.org/api/options-lifecycle.html\r\n\t\t\t\tCalled after the instance has finished processing all state-related options.\r\n\t\t\t*/\r\n\t\t\t\tcreated: function(){},\r\n\t\t\t//\r\n\r\n\t\t\t/*\r\n\t\t\t\t[VUE] Hooks => https://vuejs.org/api/options-lifecycle.html\r\n\t\t\t\tCalled after the component has been mounted.\r\n\t\t\t*/\r\n\t\t\t\tmounted: function(){},\r\n\t\t\t//\r\n\t\t}\r\n\t//\r\n</script>\r\n\r\n<style scoped>\r\n</style>"]},"metadata":{},"sourceType":"module"}