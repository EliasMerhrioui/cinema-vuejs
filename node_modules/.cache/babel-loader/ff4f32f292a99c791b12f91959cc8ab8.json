{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelDynamic as _vModelDynamic, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form-base-component\"\n};\nconst _hoisted_2 = [\"for\", \"textContent\"];\nconst _hoisted_3 = [\"type\", \"placeholder\", \"min\", \"required\", \"onUpdate:modelValue\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ButtonBase = _resolveComponent(\"ButtonBase\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = $event => $event.preventDefault())\n  }, [_createCommentVNode(\" Loop on an object \"), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.cmpFormValue, (prop, idx) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: `item-${idx}`\n    }, [_createElementVNode(\"label\", {\n      for: prop.name,\n      textContent: _toDisplayString(prop.label)\n    }, null, 8\n    /* PROPS */\n    , _hoisted_2), _withDirectives(_createElementVNode(\"input\", {\n      type: prop.type,\n      placeholder: prop.placeholder,\n      min: prop.min ? prop.min : undefined,\n      required: prop.required ? prop.required : undefined,\n      \"onUpdate:modelValue\": $event => prop.value = $event\n    }, null, 8\n    /* PROPS */\n    , _hoisted_3), [[_vModelDynamic, prop.value]])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _createCommentVNode(\" Define ButtonBase props strategy \"), $data.cmpLoginButton ? (_openBlock(), _createBlock(_component_ButtonBase, {\n    key: 0,\n    buttonvalue: $data.cmpLoginButton,\n    buttondisabled: false,\n    onOnClickButton: _cache[0] || (_cache[0] = $event => $options.onClickButton($event))\n  }, null, 8\n  /* PROPS */\n  , [\"buttonvalue\"])) : _createCommentVNode(\"v-if\", true)], 32\n  /* HYDRATE_EVENTS */\n  )]);\n}","map":{"version":3,"mappings":";;AAEEA,OAAK,EAAC;;;;;;;uBADPC,oBAmCM,KAnCN,cAmCM,CAhCLC,oBA8BO,MA9BP,EA8BO;AA9BAC,YAAM,4BAAEC,MAAM,IAAIA,MAAM,CAACC,cAAP,EAAZ;AA8BN,GA9BP,GACCC,4CACAJ,oBAkBK,IAlBL,EAkBK,IAlBL,EAkBK,oBAjBJD,oBAgBKM,SAhBL,EAgBK,IAhBL,EAgBKC,YAfoBC,qBAepB,EAfgC,CAA3BC,IAA2B,EAArBC,GAAqB,KAAlB;yBADnBV,oBAgBK,IAhBL,EAgBK;AAdHW,SAAG,UAAUD,GAAG;AAcb,KAhBL,GAICT,oBAGE,OAHF,EAGE;AAFAW,SAAG,EAAEH,IAAI,CAACI,IAEV;mBADDC,iBAAmBL,IAAP,CAACM,KAAb;AACC,KAHF;;AAAA,mCAKAd,oBAMC,OAND,EAMC;AALCe,UAAI,EAAEP,IAAI,CAACO,IAKZ;AAJCC,iBAAW,EAAER,IAAI,CAACQ,WAInB;AAHCC,SAAG,EAAET,IAAI,CAACS,GAAL,GAAWT,IAAI,CAACS,GAAhB,GAAsBC,SAG5B;AAFCC,cAAQ,EAAEX,IAAI,CAACW,QAAL,GAAgBX,IAAI,CAACW,QAArB,GAAgCD,SAE3C;uCADSV,IAAI,CAACY,QAAKlB;AACnB,KAND;;AAAA,qCAKUM,IAAI,CAACY,SAdhB;GAgBK,CAhBL;;AAAA,GAiBI,EAlBL,GAoBAhB,2DAEOiB,sCADPC,aAMEC,qBANF,EAME;UAAA;AAJAC,eAAW,EAAEH,oBAIb;AAHAI,kBAAc,EAAE,KAGhB;AADAC,mBAAa,sCAAEnB,uBAAcL,MAAd,CAAF;AACb,GANF;;AAAA,0DAvBD;;AAAA,GAgCK,CAnCN","names":["class","_createElementBlock","_createElementVNode","onSubmit","$event","preventDefault","_createCommentVNode","_Fragment","_renderList","$options","prop","idx","key","for","name","_toDisplayString","label","type","placeholder","min","undefined","required","value","$data","_createBlock","_component_ButtonBase","buttonvalue","buttondisabled","onOnClickButton"],"sourceRoot":"","sources":["C:\\Users\\haiix\\Desktop\\ITIC Paris - Projet,Exercice\\cinema-vuejs\\src\\components\\base\\FormBase.vue"],"sourcesContent":["<template>\n\t<div \n\t\tclass=\"form-base-component\"\n\t>\n\t\t<form @submit=\"$event => $event.preventDefault()\">\n\t\t\t<!-- Loop on an object -->\n\t\t\t<ul>\n\t\t\t\t<li \n\t\t\t\t\tv-for=\"( prop, idx ) in cmpFormValue\" \n\t\t\t\t\t:key=\"`item-${idx}`\"\n\t\t\t\t>\n\t\t\t\t\t<label \n\t\t\t\t\t\t:for=\"prop.name\"\n\t\t\t\t\t\tv-text=\"prop.label\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<input \n\t\t\t\t\t\t:type=\"prop.type\"\n\t\t\t\t\t\t:placeholder=\"prop.placeholder\"\n\t\t\t\t\t\t:min=\"prop.min ? prop.min : undefined\"\n\t\t\t\t\t\t:required=\"prop.required ? prop.required : undefined\"\n\t\t\t\t\t\tv-model=\"prop.value\"\n\t\t\t\t\t>\n\t\t\t\t</li>\n\t\t\t</ul>\n\n\t\t\t<!-- Define ButtonBase props strategy -->\n\t\t\t<ButtonBase \n\t\t\t\tv-if=\"cmpLoginButton\"\n\t\t\t\t:buttonvalue=\"cmpLoginButton\"\n\t\t\t\t:buttondisabled=\"false\"\n\n\t\t\t\t@onClickButton=\"onClickButton($event)\"\n\t\t\t/>\n\t\t</form>\n\n\t</div>\n</template>\n\n<script>\n\t/* eslint-disable no-console */\n\t/* eslint-disable no-unused-vars */\n\t/* eslint-disable no-mixed-spaces-and-tabs */\n\n\t/* \n\t\t[VUE] Main imports\n\t\tDefine main imports to create the application\n\t*/\n    \timport ButtonBase from \"./ButtonBase.vue\";\n\t//\n\n\t/*\n\t\t[VUE] Component\n\t\tDefine properties and methods => https://bit.ly/3GdqmXg\n\t*/\n\t\texport default {\n\t\t\t// [VUE] Component name\n\t\t\tname: 'FormBase',\n\n\t\t\t/*\n\t\t\t\t[VUE] Components => https://bit.ly/3GdqmXg\n\t\t\t\tUsed to inject children components\n\t\t\t*/\n\t\t\t\tcomponents: { ButtonBase },\n\t\t\t//\n\n\t\t\t/* \n\t\t\t\t[VUE] Props => https://fr.vuejs.org/v2/guide/components-props.html\n\t\t\t\tData binding CTRL => VIEW\n\t\t\t*/\n\t\t\t\tprops: {\n\t\t\t\t\tformValue: {\n\t\t\t\t\t\ttype: Object,\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tdefault: () => {}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t//\n\n\t\t\t/*\n\t\t\t\t[VUE] Computed => https://vuejs.org/guide/essentials/computed.html\n\t\t\t\tUsed to define simple in-template expression, \n\t\t\t\tthe expression below bind values from Store getters\n\t\t\t*/\n\t\t\t\tcomputed: {\n\t\t\t\t\tcmpFormValue: function(){\n\t\t\t\t\t\treturn this.formValue\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t//\n\n\t\t\t/*\n\t\t\t\t[VUE] Data => https://bit.ly/3GdqmXg\n\t\t\t\tUsed to inject data in the Vue.js component\n\t\t\t*/\n\t\t\t\tdata(){\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcmpLoginButton: {\n\t\t\t\t\t\t\ttype: 'submit',\n\t\t\t\t\t\t\tcontent: 'Login',\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t//\n\n\t\t\t/*\n\t\t\t\t[VUE] Methods => https://bit.ly/3GdqmXg\n\t\t\t\tUsed to add methods in Vue.js component\n\t\t\t*/\n                methods: {\n\t\t\t\t\tonClickButton: function(event){\n\t\t\t\t\t\t// Prepare forme validation values\n\t\t\t\t\t\tlet isValide = true;\n\t\t\t\t\t\tlet validFomValue = {};\n\n\t\t\t\t\t\t// Get each item form\n\t\t\t\t\t\tfor( let prop in this.cmpFormValue ){\n\t\t\t\t\t\t\tif( this.cmpFormValue[prop].required ){\n\t\t\t\t\t\t\t\tif( ['email', 'password', 'text', 'textarea'].indexOf( this.cmpFormValue[prop].type ) !== -1 ){\n\t\t\t\t\t\t\t\t\tif(!this.cmpFormValue[prop].value){ isValide = false } \n\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\tif( this.cmpFormValue[prop].min ){\n\t\t\t\t\t\t\t\t\t\t\tif(this.cmpFormValue[prop].value.length < this.cmpFormValue[prop].min){ isValide = false }\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\tif( !this.cmpFormValue[prop].value.length ){ isValide = false }\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Add value in the valid form value\n\t\t\t\t\t\t\tvalidFomValue[prop] = this.cmpFormValue[prop].value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Check form validation\n\t\t\t\t\t\tif( isValide ){\n\t\t\t\t\t\t\t// Emit event to parent component\n\t\t\t\t\t\t\tthis.$emit('onSubmit', { \n\t\t\t\t\t\t\t\tfrom: 'FormBase',\n\t\t\t\t\t\t\t\tvalue: validFomValue,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n            //\n\n\t\t\t/*\n\t\t\t\t[VUE] Hooks => https://vuejs.org/api/options-lifecycle.html\n\t\t\t\tCalled after the instance has finished processing all state-related options.\n\t\t\t*/\n\t\t\t\tcreated: function(){},\n\t\t\t//\n\n\t\t\t/*\n\t\t\t\t[VUE] Hooks => https://vuejs.org/api/options-lifecycle.html\n\t\t\t\tCalled after the component has been mounted.\n\t\t\t*/\n\t\t\t\tmounted: function(){},\n\t\t\t//\n\t\t}\n\t//\n</script>\n\n<style scoped>\n</style>"]},"metadata":{},"sourceType":"module"}